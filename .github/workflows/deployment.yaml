name: deploy demo app

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OKE_CLUSTER_ID: ${{ secrets.OKE_CLUSTER_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get access to OCIR
        id: get-ocir
        uses: oracle-actions/get-ocir-repository@v1.2
        with:
          name: ${{ secrets.OCI_DOCKER_REPO }}
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.0
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: docker build
        id: docker-build
        run: |
          docker build -t ${{ secrets.OCI_DOCKER_REPO }}:${{ github.sha }} .

      - name: docker push
        id: docker-push
        run: |
          docker push ${{ secrets.OCI_DOCKER_REPO }}:${{ github.sha }}

      - name: Upload chart
        uses: actions/upload-artifact@master
        with:
          name: app-chart-${{ github.sha }}
          path: chart/
          
      - name: 'Install OCI CLI'
          run: |
            mkdir ~/.oci
            echo "${{ secrets.OCI_CONFIG }}" > ~/.oci/config
            echo "${{ secrets.OCI_KEY_FILE }}" > ~/.oci/key.pem
            curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
            chmod +x install.sh
            ./install.sh --accept-all-defaults
            echo "/home/runner/bin" >> $GITHUB_PATH
            exec -l $SHELL
            oci setup repair-file-permissions --file /home/runner/.oci/config
            oci setup repair-file-permissions --file /home/runner/.oci/key.pem

        - name: 'Install kubectl'
          run: |
            mkdir /tmp/.kube
            curl -L -O "https://dl.k8s.io/release/v1.22.4/bin/linux/amd64/kubectl" -o kubectl
            chmod +x kubectl
            mv kubectl /usr/local/bin
            echo "${{ secrets.KUBECONFIG }}" > /tmp/.kube/config
            echo "KUBECONFIG=/tmp/.kube/config" >> $GITHUB_ENV
        - name: 'Currently running services'
          run: kubectl -n free-ns get pods

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:

      - name: Download chart
        uses: actions/download-artifact@master
        with:
          name: app-chart-${{ github.sha }}
          path: chart/

      - name: Helm deploy
        id: helm-deploy
        run: |
          helm upgrade \
            demo chart/ \
            --install --wait \
            --values chart/demo.yaml \
            --set image.tag=${{ github.sha }} \
            --namespace demo
